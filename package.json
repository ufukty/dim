{
  "name": "dim",
  "displayName": "dim",
  "description": "Define rules to reduce opacity of repeating lines or blocks to be able to focus in main logic",
  "publisher": "ufukty",
  "version": "2.1.3",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "light",
    "code reading"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "dim.disableDimForCurrentEditor",
        "title": "Disable Dim for current editor"
      },
      {
        "command": "dim.enableDimForCurrentEditor",
        "title": "Enable Dim for current editor"
      },
      {
        "command": "dim.toggleDimForCurrentEditor",
        "title": "Toggle Dim for current editor"
      }
    ],
    "configuration": {
      "title": "dim",
      "properties": {
        "dim.rules": {
          "default": [],
          "scope": "language-overridable",
          "description": "List of rules that will be used by dim to decide which part of code will be dimmed.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "description": "The pattern that will be used to generate regex. Don't forget proper escaping. Eg. \"[^\\n]\" means any character other than the new line. For dimming blocks (rather than parts in single line) it is possible to use dot operator for newlines. See the description for \"flags\" property."
              },
              "flags": {
                "type": "string",
                "description": "Flag suffix that will be used for generating the regex for given pattern. Dim sets \"g\" flag by default which matches all instances (rather than the first) of pattern. Consider adding \"s\" for block dimming rules which makes the dot match with newlines. Don't use a separator between flags. Eg. \"gs\"",
                "default": "g"
              },
              "opacity": {
                "type": "string",
                "enum": [
                  "min",
                  "mid",
                  "max"
                ]
              },
              "rule": {
                "deprecated": true,
                "description": "This property is deprecated. Please migrate to using \"pattern\" property."
              },
              "start": {
                "deprecated": true,
                "description": "This property is deprecated. Please migrate to using \"pattern\" property. Consider the use of \"s\" flag for block dimming rules to make dots match newlines. "
              },
              "end": {
                "deprecated": true,
                "description": "This property is deprecated. Please migrate to using \"pattern\" property. Consider the use of \"s\" flag for block dimming rules to make dots match newlines. "
              }
            },
            "required": [
              "pattern"
            ]
          }
        },
        "dim.valueForMinTier": {
          "type": "number",
          "default": 0.25,
          "scope": "window",
          "description": "Actual opacity value for min opacity rules.",
          "minimum": 0,
          "maximum": 1
        },
        "dim.valueForMidTier": {
          "type": "number",
          "default": 0.5,
          "scope": "window",
          "description": "Actual opacity value for mid opacity rules.",
          "minimum": 0,
          "maximum": 1
        },
        "dim.valueForMaxTier": {
          "type": "number",
          "default": 0.75,
          "scope": "window",
          "description": "Actual opacity value for max opacity rules.",
          "minimum": 0,
          "maximum": 1
        },
        "dim.defaultOpacityTier": {
          "type": "string",
          "scope": "window",
          "enum": [
            "min",
            "mid",
            "max"
          ],
          "default": "mid",
          "description": "The default opacity will be assumed for rules that doesn't specify. Overridable in rules."
        },
        "dim.defaultFlags": {
          "type": "string",
          "scope": "window",
          "default": "g",
          "description": "The default flags that will be used to generate regexes out of patterns given in rules. Overridable in rules."
        },
        "dim.defaultScanLimit": {
          "type": "number",
          "default": 1000,
          "scope": "language-overridable",
          "description": "Only the first 'n' lines will be searched for matches. Exceeding will be ignored."
        },
        "dim.defaultMaxLinesBetween": {
          "type": "number",
          "default": 5
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/lodash": "^4.14.194",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "lodash": "^4.17.21"
  },
  "icon": "media/icon.png",
  "bugs": {
    "url": "https://github.com/ufukty/dim/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ufukty/dim"
  },
  "homepage": "https://github.com/ufukty/dim"
}